name: 构建二进制版本

on:
  push:
    tags:
      - "v*.*.*"
permissions:
  contents: write
env:
  CARGO_INCREMENTAL: 0    # 减少缓存体积
  RUST_BACKTRACE: short

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, windows-latest]
        node-version: [20.x]
        include:
          - os: macos-latest
            target: x86_64-apple-darwin
            bundles: dmg
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            bundles: msi
    steps:
    # 1️⃣ 源码
    - uses: actions/checkout@v4

    # 2️⃣ Node + npm 缓存
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: '**/package-lock.json'

    # 3️⃣ Rust / Cargo 缓存
    - name: Setup Rust
      uses: dtolnay/rust-toolchain@stable
    - uses: Swatinem/rust-cache@v2
      with:
        key: tauri-${{matrix.os}}-${{ hashFiles('**/Cargo.lock') }}

    # 4️⃣ 安装 Windows 构建工具 (仅 Windows)
    - name: Install Windows SDK
      if: matrix.os == 'windows-latest'
      uses: msys2/setup-msys2@v2
      with:
        update: true
        install: >-
          git
          base-devel
          mingw-w64-x86_64-toolchain

    # 5️⃣ 前端 & Rust 依赖
    - name: Install npm & Cargo deps
      run: |
        npm ci
        cd src-tauri && cargo fetch
        rustup target add ${{ matrix.target }}

    # 6️⃣ 构建
    - name: Build Tauri App
      run: |
        npm run tauri build -- --target ${{ matrix.target }} --bundles ${{ matrix.bundles }}

    # 7️⃣ 上传产物
    - uses: actions/upload-artifact@v4
      with:
        name: cut-helper-product-${{ matrix.os }}
        path: |
          src-tauri/target/${{ matrix.target }}/release/bundle/*/*

    # 8️⃣ 发布到 GitHub Releases
    - name: Release
      uses: softprops/action-gh-release@v2
      if: startsWith(github.ref, 'refs/tags/v')   # 只有打了 tag 才触发
      with:
        files: |
          src-tauri/target/${{ matrix.target }}/release/bundle/*/*
        tag_name: ${{ github.ref_name }}          # 自动取 tag 名
        name: Release ${{ github.ref_name }}
        body: |
          自动构建发布包：
          - `.dmg`：macOS
          - `.msi`：Windows
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
